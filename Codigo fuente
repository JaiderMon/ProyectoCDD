import React, { useState } from 'react';
import './App.css';

const emotionIcons = {
  felicidad: 'üòä',
  tristeza: 'üò¢',
  enojo: 'üò†',
  sorpresa: 'üò≤',
  miedo: 'üò®',
  neutral: 'üòê',
  error: '‚ö†Ô∏è',
};

function App() {
  const [text, setText] = useState('');
  const [emotion, setEmotion] = useState('');
  const [loading, setLoading] = useState(false);

  const handlePredict = async () => {
    setLoading(true);
    try {
      const response = await fetch("http://44.201.198.24:8080/predict", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ texto: text })
      });

      const data = await response.json();
      setEmotion(data.emotion.toLowerCase());
    } catch (error) {
      console.error("Error al predecir:", error);
      setEmotion("error");
    }
    setLoading(false);
  };

  return (
    <div className={`App ${emotion}`}>
      <div className="container">
        <h1>Detector de Emociones</h1>
        <textarea
          rows="5"
          placeholder="Escribe un texto..."
          value={text}
          onChange={(e) => setText(e.target.value)}
          className="input-text"
        />
        <button
          onClick={handlePredict}
          disabled={loading || text.trim() === ''}
          className="btn"
        >
          {loading ? "Analizando..." : "Detectar emoci√≥n"}
        </button>
        {emotion && (
          <div className="result">
            <div className="icon">{emotionIcons[emotion] || '‚ùì'}</div>
            <h2>Emoci√≥n detectada:</h2>
            <p>{emotion === 'error' ? 'Error al conectar con el backend' : emotion}</p>
          </div>
        )}
      </div>
    </div>
  );
}

export default App;
